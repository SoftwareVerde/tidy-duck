////////////////////////
// Updating Tidy Duck //
////////////////////////

=======================
Rebuilding the WAR file
=======================

    After obtaining the new code-based, ensure the production database configuration
    is (still) set in:

        app/src/production/resources/server.conf

    Then run:

        scripts/make.sh

    This will generate an updated WAR file and echo its location.

=====================
Installing the update
=====================

    ------------------
     Database Changes
    ------------------

        Check for any new migrations in "sql/migrations/".  Migrations will be
        named for the version they're associated with so if version 1.0.2 is
        installed and the available files are:

            sql/migrations/v1.0.0.sql
            sql/migrations/v1.0.1.sql
            sql/migrations/v1.0.2.sql
            sql/migrations/v1.0.3.sql
            sql/migrations/v1.0.4.sql
            sql/migrations/v1.1.0.sql

        In this case only the files "v1.0.3.sql", "1.0.4.sql", and "v1.1.0.sql"
        should be run.

        If new migrations are present login into MySQL to execute them.

            mysql -u root -p

        From the MySQL console, run:

            source sql/migrations/[file1].sql
            source sql/migrations/[file2].sql
              ...
            source sql/migrations/[fileN].sql

    ---------------------
     Tomcat Installation
    ---------------------

        Transfer the WAR file to the server to be updated and move it to your tomcat
        webapps directory as ROOT.war.  For example:

            /var/lib/tomcat/webapps/ROOT.war

        The permissions should be maintained but is necessary see the INSTALL file for how
        to appropriately set the permissions.

        Tomcat should automatically detect that the WAR file has changed and
        unpackage/deploy it.  You should then be able to access the application
        through your browser.

