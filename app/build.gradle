group 'com.softwareverde'
version '1.0.3'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

ext.configuration = project.hasProperty('configuration') ? project.configuration : 'development'
sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir "src/$configuration/resources"
        }
    }
}

dependencies {
    compile group: 'com.github.softwareverde', name: 'json', version: 'v1.+'
    implementation group: 'com.github.softwareverde', name: 'java-util', version: 'v2.7.3'

    implementation group: 'com.github.softwareverde',   name: 'java-db-mysql-embedded', version: 'v3.0.3'
    implementation group: 'com.github.softwareverde',   name: 'java-mariadb-osx',       version: 'v10.5.9-p4'
    implementation group: 'com.github.softwareverde',   name: 'java-mariadb-linux',     version: 'v10.5.9-p1'

    implementation group: 'com.github.softwareverde',   name: 'http-servlet',           version: '3.3.1'
    implementation group: 'com.github.softwareverde',   name: 'java-http-client',       version: 'v2.2.5',  force: true
    implementation group: 'com.github.softwareverde',   name: 'java-cryptography',      version: 'v3.2.1'

    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'

    // Logging
    implementation group: 'com.github.softwareverde',   name: 'java-logging',           version: 'v2.3.0'

    compile project("most-adapter")

    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '1.+'
    testImplementation group: 'com.github.softwareverde',   name: 'java-db-mysql-embedded', version: 'v3.0.3'
    testImplementation group: 'com.github.softwareverde',   name: 'java-mariadb-osx',       version: 'v10.5.9-p4'
    testImplementation group: 'com.github.softwareverde',   name: 'java-mariadb-linux',     version: 'v10.5.9-p1'
}

task copyDependencies(type: Copy) {
    into "$buildDir/libs/"

    from (configurations.runtimeClasspath.files) {
        into "lib"
    }
}

task makeJar(type: Jar) {
    manifest {
        attributes  'Implementation-Title': 'Tidy Duck',
                'Implementation-Version': archiveVersion.get(),
                'Main-Class': 'com.softwareverde.tidyduck.Main',
                'Class-Path': (configurations.runtimeClasspath.files).collect { 'lib/' + it.getName() }.join(' ')
    }

    archiveFileName = project.name + '-' + archiveVersion.get() + '.jar'

    with jar
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (! desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}